#Docker 컨테이너를 정의하고 관리하기 위해 구성 파일
#여러 컨테이너와 한 곳에 정리 할 수 있게 해줌
#파일 버전
version: '3.8'

services:
  # MySQL 데이터베이스
  db:
    image: mysql:latest
    container_name: db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    # 한글 설정
    command: 
      - --character-set-server=utf8mb4 
      - --collation-server=utf8mb4_general_ci
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:      
      - "6379:6379"
    networks:
      - app-network

  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: redis_insight
    ports:
      - "5540:5540"
    depends_on:
      - redis
    networks:
      - app-network

  mongo:
    container_name: mongodb
    image: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network
    volumes:
      - mongodb:/data/db
    command: ["mongod", "--auth"]
    hostname: mongo

  mongo_express:
    image: mongo-express:latest
    container_name: mongo_insight
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    networks:
      - app-network
    hostname: mongo-express

  node:
    container_name: node
    image: jungeunyoon/teama-backend:1.0.54
    restart: always
    environment:
      - TZ=Asia/Seoul
      - NODE_ENV=development
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - REDIS_URL=redis://redis:6379
      - MYSQL_HOST=db
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - GOOGLE_CLOUD_PROJECT=rare-bloom-416113 
      - GCLOUD_STORAGE_BUCKET=logs_image
    ports:
      - '8000:8000'
    depends_on:
      - db
      - redis
      - mongodb
    command: npm start # 컨테이너가 시작될 때 실행할 명령
    networks:
      - app-network

  front:
    image: jungeunyoon/team-a-frontend:1.0.50
    container_name: front
    ports:
      - "3000:3000"
    command: yarn dev
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  mongodb: